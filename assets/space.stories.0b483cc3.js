var c=Object.defineProperty;var n=(e,t)=>c(e,"name",{value:t,configurable:!0});import"./index.881cdf45.js";import{c as o,A as i,M as d}from"./Props.8c3f6931.js";import"./jsx-runtime.47f9d45f.js";import"./iframe.bfbba2b7.js";import{T as u,s as l}from"./TokensGrid.1ef1e9de.js";import"./string.441dc487.js";import"./index.c99e8d0f.js";import"./es.map.constructor.b4b16f07.js";import"./es.number.to-fixed.27713e90.js";function p(){return p=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var s in a)Object.prototype.hasOwnProperty.call(a,s)&&(e[s]=a[s])}return e},p.apply(this,arguments)}n(p,"_extends");const y={},x="wrapper";function m({components:e,...t}){return o(x,p({},y,t,{components:e,mdxType:"MDXLayout"}),o(d,{title:"Tokens/Spaces",mdxType:"Meta"}),o("h1",null,"Space"),o(u,{tokens:l,hasRemValue:!0,mdxType:"TokensGrid"}))}n(m,"MDXContent");m.isMDXComponent=!0;const T=n(()=>{throw new Error("Docs-only story")},"__page");T.parameters={docsOnly:!0};const r={title:"Tokens/Spaces",includeStories:["__page"]},f={};r.parameters=r.parameters||{};r.parameters.docs={...r.parameters.docs||{},page:()=>o(i,{mdxStoryNameToKey:f,mdxComponentAnnotations:r},o(m,null))};const X=["__page"];export{X as __namedExportsOrder,T as __page,r as default};
//# sourceMappingURL=space.stories.0b483cc3.js.map
